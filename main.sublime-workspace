{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ti",
				"timeago"
			],
			[
				"clear",
				"clear_form"
			],
			[
				"yach",
				"yachtshares"
			],
			[
				"json",
				"json_encode"
			],
			[
				"Model",
				"Model_Formfieldbuyer"
			],
			[
				"yacht",
				"yachtshare"
			],
			[
				"location",
				"location_specific"
			],
			[
				"share_",
				"share_size_den"
			],
			[
				"share_size",
				"share_size_num"
			],
			[
				"belong",
				"belongs_to_ids"
			],
			[
				"bel",
				"belongs_to_ids"
			],
			[
				"belongs",
				"belongs_to_id"
			],
			[
				"associ",
				"associated_ids"
			],
			[
				"exec",
				"execute"
			],
			[
				"assoc",
				"associated_ids"
			],
			[
				"DB",
				"DB::query"
			],
			[
				"asso",
				"associated_ids"
			],
			[
				"upload",
				"upload_form"
			],
			[
				"displa",
				"display_results"
			],
			[
				"cre",
				"create"
			],
			[
				"form",
				"formfieldbuyer"
			],
			[
				"errr",
				"error"
			],
			[
				"terms",
				"terms_and_conditions"
			],
			[
				"sess",
				"session/change_password"
			],
			[
				"new",
				"new_password"
			],
			[
				"input",
				"input_arr"
			],
			[
				"session",
				"session/create"
			],
			[
				"se",
				"selected_buyer_cols"
			],
			[
				"default",
				"default_cols"
			],
			[
				"select",
				"selected_yacht_cols"
			],
			[
				"save",
				"saved_form_data"
			],
			[
				"seller",
				"seller/create"
			],
			[
				"created",
				"created_at"
			],
			[
				"ya",
				"yachtshare"
			],
			[
				"ord",
				"order_by"
			],
			[
				"doc",
				"doc_d	Constant Definition"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "<?php\n	class components_Lead\n	{\n		private $data;\n		\n		private $status;\n		\n		private $fields = array(\n			'name' 			=> array('mandatory' => true, 'validate' => ''),\n			'address1' 		=> array('mandatory' => false, 'validate' => ''),\n			'address2' 		=> array('mandatory' => false, 'validate' => ''),\n			'address3' 		=> array('mandatory' => false, 'validate' => ''),\n			'city' 			=> array('mandatory' => false, 'validate' => ''),\n			'county' 		=> array('mandatory' => false, 'validate' => ''),\n			'postcode' 		=> array('mandatory' => false, 'validate' => ''),\n			'email' 		=> array('mandatory' => true, 'validate' => 'email'),\n			'phone_number' 	=> array('mandatory' => false, 'validate' => ''),\n			'orientation'  	=> array('mandatory' => false, 'validate' => ''),\n			'solarsize'    	=> array('mandatory' => true, 'validate' => ''),\n			'housetype'    	=> array('mandatory' => true, 'validate' => ''),\n			'obstructions'	=> array('mandatory' => true, 'validate' => ''),\n			'lat' 		    => array('mandatory' => true, 'validate' => ''),\n			'lng' 			=> array('mandatory' => true, 'validate' => ''),\n			'installer_id'	=> array('mandatory' => true, 'validate' => ''),\n			'udid'			=> array('mandatory' => true, 'validate' => ''),\n		);\n			\n		public function create(array $data)\n		{  \n			$this->status = 'new';			\n			//Store the lead, check required fields have been sent\n			foreach($this->fields as $key => $value)\n			{\n				if($value['mandatory'])\n				{\n					if(! array_key_exists($key, $data) || empty($data[$key]))\n					{\n						$this->status = 'rejected';\n						continue;\n					}\n				}\n				\n				if(isset($data[$key]) && !empty($data[$key]))\n				{\n					$this->data['lead'][$key] = $data[$key];							\n				}\n				else\n				{\n					$this->data['lead'][$key] = '';\n				}\n			}\n\n			if($this->status == 'rejected')\n            {     \n                throw new exceptions_CoreException('Mandatory fields missing', 301);\n            }   \n		}\n		\n		public function validate()\n		{\n			$validateCols = array();\n			foreach($this->fields as $key => $value)\n			{\n				//mandatory and is not empty, then validate\n			   if($value['mandatory'] && !empty($this->data['lead'][$key]))\n			   {\n					if($value['validate'] != '')\n					{\n						if(method_exists(new components_Validator(), $value['validate']))\n						{\n							if(! call_user_func('components_Validator::' . $value['validate'], $this->data['lead'][$key]))\n							{							   \n							   $this->status = 'validate'; //Flag that this lead not passed validation    \n							   $validateCols[] = $key;                  \n							}					\n						}\n					}\n				}\n			}\n\n			if($this->status == 'validate')\n            {     \n				throw new exceptions_CoreException('Email not valid', 301);\n            }  			\n			\n		}\n		\n		public function isDuplicate()\n		{\n			//Duplication checks works like (refine these?):\n			//	Firstname & lastname \n			// 	email\n			//	position (within 10metres)\n			//The above will allow for the same person to have multiple houses\n			\n			//the SQL\n			$sql = '\n				SELECT\n					count(*)\n				FROM leads \n				WHERE\n					installer_id	= :i_id\n				AND email_lower		= LOWER(:email)\n				AND   ( ( ( Acos(Sin((:lat * Pi() / 180 )) * Sin((lat * Pi() / 180 )) + Cos((:lat * Pi() / 180 )) * Cos((lat * Pi() / 180 )) * Cos(((:lng - lng ) * Pi() / 180 )))) * 180 / Pi()) * 60 * 1.1515 * 1.609344 * 1000 ) <= 20\n				AND workflow_status = \"new\"\n				-- HAVING METERS >= 20			\n			';\n			$qry = mysql_DB::getInstantce()->prepare($sql);\n            $qry->execute(array(':lat'   		=> $this->data['lead']['lat'], \n                                ':lng'   		=> $this->data['lead']['lng'],\n                                ':email'   		=> $this->data['lead']['email'],\n                                ':i_id'   		=> $this->data['lead']['installer_id'],\n								));\n			//print_r($qry->fetchAll());\n            $dupeCount = $qry->fetchColumn();\n			if($dupeCount != 0)\n			{\n				$this->status = 'dupe';\n				return true;\n			}\n			\n			return false;\n		}\n\n		public function store()\n		{\n			$sqlVars = $this->getSqlReadyArr();\n			$sql = ' INSERT INTO leads\n						(' . implode(',', $sqlVars['names']) . '\n						 ,workflow_status,\n						 cpl,\n						 date\n						)\n						VALUES(' . implode(',', array_pad(array(), count($sqlVars['names']) + 2, '?')) . ', NOW())';\n			$qry = mysql_DB::getInstantce()->prepare($sql);\n			$qry->execute(array_merge($sqlVars['vals'], array($this->status, '15.00')));\n			//print_r($qry->errorInfo());\n		}\n		\n        private function getSqlReadyArr()\n        {            \n            $colNames = array();\n            $colVals = array();\n            foreach($this->fields as $key => $value)\n            {\n				//Store name vlaues in the arrays\n				//Store the original\n				$colNames[] = $key;\n				$colVals[] = ( (empty($this->data['lead'][$key])) ? '' : $this->data['lead'][$key] );\n				\n				//email, firstname, address1, postcode and surname need lowering to insert into database, for faster indexing.\n				if($key == 'email' || \n				   $key == 'name')\n				{                        \n					//Store the lower versions\n					$colNames[] = $key . \"_lower\";\n					$colVals[] = ( (empty($this->data['lead'][$key])) ? '' : strtolower($this->data['lead'][$key]) );\n				}\n              \n            }\n                        \n            return array('names' => $colNames, 'vals' => $colVals);\n        }\n		\n	}\n?>",
			"settings":
			{
				"buffer_size": 5304,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 75.0,
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"commit",
				"Git: Commit"
			],
			[
				"add",
				"Git: Add..."
			],
			[
				"status",
				"Git: Status"
			],
			[
				"push",
				"Git: Push"
			],
			[
				"git add",
				"Git: Add..."
			],
			[
				"git status",
				"Git: Status"
			],
			[
				"git commit",
				"Git: Commit"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"git co",
				"Git: Commit"
			],
			[
				"git stat",
				"Git: Status"
			],
			[
				"git commt",
				"Git: Commit"
			],
			[
				"git statu",
				"Git: Status"
			],
			[
				"git com",
				"Git: Commit"
			],
			[
				"comm",
				"Git: Commit"
			],
			[
				"git sta",
				"Git: Status"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"git log",
				"Git: Log All"
			],
			[
				"git rese",
				"Git: Reset (hard) HEAD"
			],
			[
				"git cmm",
				"Git: Commit"
			],
			[
				"git stash",
				"Git: Stash Apply"
			],
			[
				"git st",
				"Git: Status"
			],
			[
				"gits",
				"Git: Status"
			],
			[
				"git pus",
				"Git: Push"
			],
			[
				"git pu",
				"Git: Pull"
			],
			[
				"git p",
				"Git: Push"
			],
			[
				"git comm",
				"Git: Commit"
			],
			[
				"git rest",
				"Git: Reset (hard) HEAD"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"package ins",
				"Package Control: Install Package"
			],
			[
				"package i",
				"Package Control: Install Package"
			],
			[
				"",
				"Git: Gui"
			],
			[
				"git",
				"Git: Amend Commit"
			],
			[
				"git s",
				"Git: Status"
			],
			[
				"add rep",
				"Package Control: Add Repository"
			],
			[
				"add re",
				"Package Control: Add Repository"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/evan/www/yacht/fuel/app/classes/model/image.php",
		"/home/evan/www/yacht/fuel/app/classes/model/yachtshare.php",
		"/home/evan/www/yacht/fuel/app/views/front/view.php",
		"/home/evan/www/yacht/fuel/app/views/yachtshare/seller/create.php",
		"/home/evan/www/yacht/fuel/app/views/forms/_textarea.php",
		"/home/evan/www/yacht/fuel/app/views/forms/_text_fraction.php",
		"/home/evan/www/yacht/fuel/app/views/forms/_text.php",
		"/home/evan/www/yacht/fuel/app/views/forms/_terms_and_conditions.php",
		"/home/evan/www/yacht/fuel/app/views/forms/_dropdown.php",
		"/home/evan/www/yacht/fuel/app/views/forms/_length.php",
		"/home/evan/www/yacht/fuel/app/views/file/seller/index.php",
		"/home/evan/www/yacht/fuel/app/views/file/index.php",
		"/home/evan/www/yacht/fuel/app/classes/controller/yachtshare.php",
		"/home/evan/www/yacht/fuel/app/views/session/login.php",
		"/home/evan/www/yacht/fuel/app/config/routes.php",
		"/home/evan/www/yacht/fuel/app/classes/mycontroller.php",
		"/home/evan/www/yacht/fuel/app/classes/controller/session.php",
		"/home/evan/www/yacht/fuel/app/views/_includes.php",
		"/home/evan/www/yacht/public/assets/js/files/functions.js",
		"/home/evan/www/yacht/public/assets/css/styles.css",
		"/home/evan/www/yacht/public/assets/css/plugins.css",
		"/home/evan/www/resources/jquery-autocomplete/demo/index.html",
		"/home/evan/www/yacht/fuel/app/views/yachtshare/seller/view.php",
		"/home/evan/www/yacht/fuel/app/views/buyer/thankyou.php",
		"/home/evan/www/yacht/fuel/app/config/production/db.php",
		"/home/evan/www/yacht/fuel/app/config/development/db.php",
		"/home/evan/www/yacht/fuel/app/views/buyer/create2.php",
		"/home/evan/www/yacht/fuel/app/classes/controller/seller.php",
		"/home/evan/www/yacht/fuel/app/views/seller/search_results.php",
		"/home/evan/www/yacht/fuel/app/views/seller/find_by_name.php",
		"/home/evan/www/yacht/fuel/app/views/install.php",
		"/home/evan/www/yacht/fuel/app/views/front/index.php",
		"/home/evan/www/yacht/fuel/app/views/front_end_template.php",
		"/home/evan/www/yacht/fuel/app/classes/controller/front.php",
		"/home/evan/www/yacht/fuel/app/classes/controller/file.php",
		"/home/evan/www/yacht/fuel/app/views/yachtshare/admin/create.php",
		"/home/evan/www/yacht/fuel/app/views/yachtshare/admin/edit.php",
		"/home/evan/www/yacht/fuel/app/views/yachtshare/create.php",
		"/home/evan/www/yacht/fuel/app/classes/controller/buyer.php",
		"/home/evan/www/yacht/fuel/app/views/formfieldbuyer/create.php",
		"/home/evan/www/yacht/fuel/app/views/view.php",
		"/home/evan/.config/sublime-text-2/Packages/Dayle Rees Color Schemes/Github.tmTheme",
		"/home/evan/.config/sublime-text-2/Packages/Dayle Rees Color Schemes/Github.tmTheme.cache",
		"/home/evan/www/yacht/fuel/app/views/public_template.php",
		"/home/evan/www/yacht/fuel/app/classes/controller/formfieldbuyer.php",
		"/home/evan/www/yacht/fuel/app/views/formfieldbuyer/edit.php",
		"/home/evan/www/yacht/fuel/app/views/yachtshare/admin/view.php",
		"/home/evan/www/yacht/fuel/app/views/seller/create.php",
		"/home/evan/www/yacht/fuel/app/views/session/forgot.php",
		"/home/evan/www/yacht/fuel/app/views/session/change_password.php",
		"/home/evan/www/yacht/fuel/app/classes/controller/emailnew.php",
		"/home/evan/www/yacht/fuel/app/classes/controller/install.php",
		"/home/evan/www/yacht/fuel/packages/orm/classes/model.php",
		"/home/evan/www/yacht/fuel/packages/orm/classes/query.php",
		"/home/evan/www/yacht/fuel/app/views/yachtshare/terms_and_conditions.php",
		"/home/evan/www/yacht/fuel/app/views/formfieldbuyer/order.php",
		"/home/evan/www/yacht/fuel/app/views/formfieldbuyer/_table.php",
		"/home/evan/www/yacht/fuel/app/views/terms_and_conditions.php",
		"/home/evan/www/yacht/fuel/app/classes/controller/data.php",
		"/home/evan/www/yacht/fuel/app/views/yachtshare/admin/_nav.php",
		"/home/evan/www/yacht/fuel/app/views/yachtshare/_nav.php",
		"/home/evan/www/yacht/fuel/app/views/template.php",
		"/home/evan/www/yacht/fuel/app/classes/mytemplate.php",
		"/home/evan/www/yacht/fuel/app/views/yachtshare/index.php",
		"/home/evan/www/yacht/CONTRIBUTING.md",
		"/home/evan/.config/sublime-text-2/Packages/User/untitled.sublime-snippet",
		"/home/evan/www/yacht/fuel/app/classes/model/formfieldbuyer.php",
		"/home/evan/www/yacht/fuel/app/views/formfield/index.php",
		"/home/evan/www/yacht/main.sublime-project",
		"/home/evan/.config/sublime-text-2/Packages/User/Package Control.sublime-settings",
		"/home/evan/Documents/test.md",
		"/home/evan/.config/sublime-text-2/Packages/User/Preferences.sublime-settings"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			".ac",
			"ui-autocomplete-input",
			"auto",
			"submitClicked",
			"var has",
			"select",
			"div",
			"Control",
			"form",
			"saved_form_data",
			"tag",
			"select_type",
			"offline_config",
			"there is no",
			"order",
			"search_term",
			"search_t",
			"columns",
			"replac",
			"replace_",
			"seller_first",
			"header",
			"table",
			"boatname",
			"Response",
			"else"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"form"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"settings":
					{
						"buffer_size": 5304,
						"regions":
						{
						},
						"selection":
						[
							[
								3094,
								3094
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1406.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.git":
	{
		"height": 100.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 50.0,
	"status_bar_visible": true
}
